plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.0'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'maven-publish'
    id 'groovy'
    id 'java-library'
}

group 'com.linksfoundation.dq.core.processing.preprocessing.converter'
version '1.0-SNAPSHOT'

ext {
    protobufVersion = '3.21.9'
    reactorCore = "3.4.24"
    reactorKafka = "1.3.14"
    javaTuples = "1.2"
    lombok = "1.18.24"
    protobufSerializer = "7.3.0"
    gsonVersion = '2.10'
    jackson = "2.14.0"
    yaml = "2.13.0"
}

repositories {
    mavenCentral()

    /*
    maven {
        url 'https://nexus.repository-pert.ismb.it/repository/maven-public/'
        credentials {
            username "$repoUser"
            password "$repoPassword"
        }
    }*/

    maven {
        url 'https://packages.confluent.io/maven/'
    }

    maven {
        url "https://git.pertforge.ismb.it/api/v4/projects/885/packages/maven"
        name "GitLab"
        credentials(HttpHeaderCredentials) {
            name = 'Private-Token'
            value = token
        }
        authentication {
            header(HttpHeaderAuthentication)
        }
    }
}

dependencies {
    implementation('com.linksfoundation.dq.api:utils:1.0-SNAPSHOT') { changing = true }
    implementation('com.linksfoundation.dq.api.processing:preprocessing:1.0-SNAPSHOT') { changing = true }
    implementation('com.linksfoundation.dq.api:data-model:1.0-SNAPSHOT') { changing = true }

    implementation "io.confluent:kafka-protobuf-serializer:$protobufSerializer"
    implementation "org.springframework.boot:spring-boot-starter"
    implementation "org.springframework.kafka:spring-kafka"
    implementation "io.projectreactor:reactor-core:$reactorCore"
    implementation "io.projectreactor.kafka:reactor-kafka:$reactorKafka"
    implementation "org.javatuples:javatuples:$javaTuples"
    implementation "com.google.protobuf:protobuf-java:$protobufVersion"
    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:$yaml"
    compileOnly "org.projectlombok:lombok:$lombok"
    annotationProcessor "org.projectlombok:lombok:$lombok"

    testCompileOnly "org.projectlombok:lombok:$lombok"
    testAnnotationProcessor "org.projectlombok:lombok:$lombok"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    testImplementation('org.junit.jupiter:junit-jupiter-api:5.9.2')
    testRuntimeOnly('org.junit.platform:junit-platform-launcher:1.9.2')
    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.9.2')
    testRuntimeOnly('org.junit.vintage:junit-vintage-engine:5.9.2')
}

configurations.all {
    // don't cache changing modules at all
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

publishing {
    publications {
        library(MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            name "nexus"
            def releasesRepoUrl = 'https://nexus.repository-pert.ismb.it/repository/maven-releases/'
            def snapshotsRepoUrl = 'https://nexus.repository-pert.ismb.it/repository/maven-snapshots/'
            url project.version.endsWith('-SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username "$repoUser"
                password "$repoPassword"
            }
        }
    }
}

java {
    //withJavadocJar()
    withSourcesJar()
}

test {
    useJUnitPlatform()
}